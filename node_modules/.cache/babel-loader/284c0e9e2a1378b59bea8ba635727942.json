{"ast":null,"code":"// import React, { Component } from 'react';\n// import { Link, withRouter } from 'react-router-dom';\n// import { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\n// import AppNavbar from './AppNavbar';\n// class CustomerEdit extends Component {\n// //   emptyCustomer = {\n// //     firstname: '',\n// //     lastname: '',\n// //     age: '',\n// //     address: '',\n// //     copyrigtby: ''\n// //   };\n// emptyPromotion=[];\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       item: this.emptyCustomer\n//     };\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//   async componentDidMount() {\n//     // need to call get /api/promotion/:id and to put on state\n//     if (this.props.match.params.id !== 'new') {\n//       const customer = await (await fetch(`/api/customer/${this.props.match.params.id}`)).json();\n//       this.setState({item: customer});\n//     }\n//   }\n//   handleChange(event) {\n//     const target = event.target;\n//     const value = target.value;\n//     const name = target.name;\n//     let item = {...this.state.item};\n//     item[name] = value;\n//     this.setState({item});\n//   }\n//   async handleSubmit(event) {\n//     // need to call update /api/promotion\n//     event.preventDefault();\n//     const {item} = this.state;\n//     await fetch('/api/customer', {\n//       method: (item._id) ? 'PUT' : 'POST',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(item),\n//     });\n//     this.props.history.push('/customers');\n//   }\n//   render() {\n//     const {item} = this.state;\n//     const title = <h2>{item.id ? 'Edit Customer' : 'Add Customer'}</h2>;\n//     return <div>\n//       <AppNavbar/>\n//       <Container>\n//         {title}\n//         <Form onSubmit={this.handleSubmit}>\n//          {Object.keys(item).map(function(value) {\n//                 if(value != 'id') {\n//                   <FormGroup>\n//                     <Label for={value}>{value}</Label>\n//                     <Input type=\"text\" name={value} id={value} value={item[value] || ''}\n//                           onChange={this.handleChange} autoComplete={value}/>\n//                   </FormGroup>\n//                 }\n//             })}\n//           <FormGroup>\n//             <Label for=\"firstname\">Firstname</Label>\n//             <Input type=\"text\" name=\"firstname\" id=\"firstname\" value={item.firstname || ''}\n//                    onChange={this.handleChange} autoComplete=\"firstname\"/>\n//           </FormGroup>\n//           <FormGroup>\n//             <Label for=\"lastname\">Lastname</Label>\n//             <Input type=\"text\" name=\"lastname\" id=\"lastname\" value={item.lastname || ''}\n//                    onChange={this.handleChange} autoComplete=\"lastname\"/>\n//           </FormGroup>          \n//           <FormGroup>\n//             <Label for=\"age\">Age</Label>\n//             <Input type=\"text\" name=\"age\" id=\"age\" value={item.age || ''}\n//                    onChange={this.handleChange} autoComplete=\"age\"/>\n//           </FormGroup>\n//           <FormGroup>\n//             <Label for=\"address\">Address</Label>\n//             <Input type=\"text\" name=\"address\" id=\"address\" value={item.address || ''}\n//                    onChange={this.handleChange} autoComplete=\"address\"/>\n//           </FormGroup>\n//           <FormGroup>\n//             <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n//             <Button color=\"secondary\" tag={Link} to=\"/customers\">Cancel</Button>\n//           </FormGroup>\n//         </Form>\n//       </Container>\n//     </div>\n//   }\n// }\n// export default withRouter(CustomerEdit);","map":{"version":3,"sources":["C:/Users/User/Desktop/moon active/Reactjs-Nodejs-MongoDB-CRUD-Example copy/src/PromotionEdit.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from 'react';\r\n// import { Link, withRouter } from 'react-router-dom';\r\n// import { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\n// import AppNavbar from './AppNavbar';\r\n\r\n// class CustomerEdit extends Component {\r\n\r\n// //   emptyCustomer = {\r\n// //     firstname: '',\r\n// //     lastname: '',\r\n// //     age: '',\r\n// //     address: '',\r\n// //     copyrigtby: ''\r\n// //   };\r\n// emptyPromotion=[];\r\n   \r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       item: this.emptyCustomer\r\n//     };\r\n//     this.handleChange = this.handleChange.bind(this);\r\n//     this.handleSubmit = this.handleSubmit.bind(this);\r\n//   }\r\n\r\n//   async componentDidMount() {\r\n\r\n\r\n//     // need to call get /api/promotion/:id and to put on state\r\n\r\n//     if (this.props.match.params.id !== 'new') {\r\n//       const customer = await (await fetch(`/api/customer/${this.props.match.params.id}`)).json();\r\n//       this.setState({item: customer});\r\n//     }\r\n//   }\r\n\r\n//   handleChange(event) {\r\n//     const target = event.target;\r\n//     const value = target.value;\r\n//     const name = target.name;\r\n//     let item = {...this.state.item};\r\n//     item[name] = value;\r\n//     this.setState({item});\r\n//   }\r\n\r\n//   async handleSubmit(event) {\r\n\r\n\r\n//     // need to call update /api/promotion\r\n\r\n//     event.preventDefault();\r\n//     const {item} = this.state;\r\n\r\n//     await fetch('/api/customer', {\r\n//       method: (item._id) ? 'PUT' : 'POST',\r\n//       headers: {\r\n//         'Accept': 'application/json',\r\n//         'Content-Type': 'application/json'\r\n//       },\r\n//       body: JSON.stringify(item),\r\n//     });\r\n//     this.props.history.push('/customers');\r\n//   }\r\n\r\n//   render() {\r\n//     const {item} = this.state;\r\n//     const title = <h2>{item.id ? 'Edit Customer' : 'Add Customer'}</h2>;\r\n\r\n//     return <div>\r\n//       <AppNavbar/>\r\n//       <Container>\r\n//         {title}\r\n//         <Form onSubmit={this.handleSubmit}>\r\n\r\n//          {Object.keys(item).map(function(value) {\r\n//                 if(value != 'id') {\r\n//                   <FormGroup>\r\n//                     <Label for={value}>{value}</Label>\r\n//                     <Input type=\"text\" name={value} id={value} value={item[value] || ''}\r\n//                           onChange={this.handleChange} autoComplete={value}/>\r\n//                   </FormGroup>\r\n//                 }\r\n//             })}\r\n//           <FormGroup>\r\n//             <Label for=\"firstname\">Firstname</Label>\r\n//             <Input type=\"text\" name=\"firstname\" id=\"firstname\" value={item.firstname || ''}\r\n//                    onChange={this.handleChange} autoComplete=\"firstname\"/>\r\n//           </FormGroup>\r\n//           <FormGroup>\r\n//             <Label for=\"lastname\">Lastname</Label>\r\n//             <Input type=\"text\" name=\"lastname\" id=\"lastname\" value={item.lastname || ''}\r\n//                    onChange={this.handleChange} autoComplete=\"lastname\"/>\r\n//           </FormGroup>          \r\n//           <FormGroup>\r\n//             <Label for=\"age\">Age</Label>\r\n//             <Input type=\"text\" name=\"age\" id=\"age\" value={item.age || ''}\r\n//                    onChange={this.handleChange} autoComplete=\"age\"/>\r\n//           </FormGroup>\r\n//           <FormGroup>\r\n//             <Label for=\"address\">Address</Label>\r\n//             <Input type=\"text\" name=\"address\" id=\"address\" value={item.address || ''}\r\n//                    onChange={this.handleChange} autoComplete=\"address\"/>\r\n//           </FormGroup>\r\n//           <FormGroup>\r\n//             <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n//             <Button color=\"secondary\" tag={Link} to=\"/customers\">Cancel</Button>\r\n//           </FormGroup>\r\n//         </Form>\r\n//       </Container>\r\n//     </div>\r\n//   }\r\n// }\r\n\r\n// export default withRouter(CustomerEdit);"]},"metadata":{},"sourceType":"module"}