{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\moon active\\\\Reactjs-Nodejs-MongoDB-CRUD-Example copy\\\\src\\\\PromotionList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\n\nclass PromotionList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      promotionsColumns: [],\n      promotionsLines: [],\n      isLoading: true\n    };\n    this.remove = this.remove.bind(this);\n    this.create = this.create.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch('api/promotionsColumns').then(response => response.json()).then(data => this.setState({\n      promotionsColumns: data,\n      isLoading: false\n    }));\n    fetch('api/promotions').then(response => response.json()).then(data => this.setState({\n      promotionsLines: data\n    }));\n  }\n\n  async remove(id) {\n    await fetch(`/api/promotion/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      console.log(\"Remove Done!\");\n      let updatedPromotions = [...this.state.promotionsLines].filter(i => i.id !== id);\n      this.setState({\n        promotionsLines: updatedPromotions\n      });\n    });\n  } // async create(id) {\n  //   let promotion = [...this.state.promotionsLines].filter(i => i.id === id);\n  //   promotion.id = \"689586958695\"; // change to random\n  //   const newPromtion = {\n  //     promotionLines: promotion\n  //   }\n  //   await fetch(`/api/promotions`, {\n  //     method: 'POST',\n  //     headers: {\n  //       'Accept': 'application/json',\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify(newPromtion),\n  //   }).then(() => {\n  //     console.log(\"Create Done!\");\n  //     let updatedPromotions = [...this.state.promotionsLines];\n  //     updatedPromotions.push(promotion)\n  //     this.setState({promotionsLines: updatedPromotions});\n  //   });\n  // }\n\n\n  render() {\n    const {\n      promotionsColumns,\n      promotionsLines,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    const promotionList = promotionsColumns;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      tag: Link,\n      to: \"/customers/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Generate Promotions\")), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"Promotion List\"), /*#__PURE__*/React.createElement(Table, {\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      width: \"20%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"checkbox\"), Object.keys(promotionList).map(function (value) {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        width: \"20%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 26\n        }\n      }, value);\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      width: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, promotionsLines.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      width: \"20%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }), Object.keys(item).map(function (value) {\n      if (value !== 'id') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          width: \"20%\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 32\n          }\n        }, item[value]);\n      }\n    }), /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      color: \"danger\",\n      tag: Link,\n      to: \"/promotion/\" + item[\"id\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      color: \"primary\",\n      onClick: () => this.create(item[\"id\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"Duplicate\"), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      color: \"danger\",\n      onClick: () => this.remove(item[\"id\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"Delete\"))))))));\n  }\n\n}\n\nexport default PromotionList;","map":{"version":3,"sources":["C:/Users/User/Desktop/moon active/Reactjs-Nodejs-MongoDB-CRUD-Example copy/src/PromotionList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","PromotionList","constructor","props","state","promotionsColumns","promotionsLines","isLoading","remove","bind","create","componentDidMount","setState","fetch","then","response","json","data","id","method","headers","console","log","updatedPromotions","filter","i","render","promotionList","Object","keys","map","value","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass PromotionList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {promotionsColumns: [], promotionsLines: [], isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n    this.create = this.create.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch('api/promotionsColumns')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({promotionsColumns: data, isLoading: false}));\r\n\r\n    fetch('api/promotions')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({promotionsLines: data}));  \r\n  }\r\n\r\n  async remove(id) {\r\n    await fetch(`/api/promotion/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      console.log(\"Remove Done!\");\r\n      let updatedPromotions = [...this.state.promotionsLines].filter(i => i.id !== id);\r\n      this.setState({promotionsLines: updatedPromotions});\r\n    });\r\n  }\r\n\r\n  // async create(id) {\r\n  //   let promotion = [...this.state.promotionsLines].filter(i => i.id === id);\r\n  //   promotion.id = \"689586958695\"; // change to random\r\n  //   const newPromtion = {\r\n  //     promotionLines: promotion\r\n  //   }\r\n  //   await fetch(`/api/promotions`, {\r\n  //     method: 'POST',\r\n  //     headers: {\r\n  //       'Accept': 'application/json',\r\n  //       'Content-Type': 'application/json'\r\n  //     },\r\n  //     body: JSON.stringify(newPromtion),\r\n  //   }).then(() => {\r\n  //     console.log(\"Create Done!\");\r\n  //     let updatedPromotions = [...this.state.promotionsLines];\r\n  //     updatedPromotions.push(promotion)\r\n  //     this.setState({promotionsLines: updatedPromotions});\r\n  //   });\r\n  // }\r\n\r\n  render() {\r\n    const {promotionsColumns,promotionsLines, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n    const promotionList = promotionsColumns;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to=\"/customers/new\">Generate Promotions</Button>\r\n          </div>\r\n          <h3>Promotion List</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n              <tr>\r\n              <th width=\"20%\">checkbox</th>\r\n                {Object.keys(promotionList).map(function(value) {\r\n                  return <th width=\"20%\">\r\n                  {value}\r\n                  </th>\r\n                })}\r\n                <th width=\"10%\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {promotionsLines.map((item) => \r\n                  <tr>\r\n                    <td width=\"20%\"></td>\r\n                    {Object.keys(item).map(function(value) {\r\n                      if(value !== 'id') {\r\n                        return <td width=\"20%\" >\r\n                        {item[value]}\r\n                        </td>\r\n                      }\r\n                  })}\r\n                    <ButtonGroup>\r\n                        <Button size=\"sm\" color=\"danger\" tag={Link} to={\"/promotion/\" + item[\"id\"]}>Edit</Button>\r\n                        <Button size=\"sm\" color=\"primary\" onClick={() => this.create(item[\"id\"])}>Duplicate</Button>\r\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(item[\"id\"])}>Delete</Button>\r\n                    </ButtonGroup>\r\n                  </tr>\r\n                )}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PromotionList;"]},"metadata":{},"sourceType":"module"}