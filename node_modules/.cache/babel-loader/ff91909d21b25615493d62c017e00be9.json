{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\moon active\\\\Reactjs-Nodejs-MongoDB-CRUD-Example copy\\\\src\\\\PromotionEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\n\nclass CustomerEdit extends Component {\n  //   emptyCustomer = {\n  //     firstname: '',\n  //     lastname: '',\n  //     age: '',\n  //     address: '',\n  //     copyrigtby: ''\n  //   };\n  constructor(props) {\n    super(props);\n    this.emptyPromotion = [];\n    this.state = {\n      item: this.emptyCustomer\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    // need to call get /api/promotion/:id and to put on state\n    if (this.props.match.params.id !== 'new') {\n      const promotion = await (await fetch(`/api/promotiion/${this.props.match.params.id}`)).json();\n      this.setState({\n        item: customer\n      });\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let item = { ...this.state.item\n    };\n    item[name] = value;\n    this.setState({\n      item\n    });\n  }\n\n  async handleSubmit(event) {\n    // need to call update /api/promotion\n    event.preventDefault();\n    const {\n      item\n    } = this.state;\n    await fetch('/api/promotion', {\n      method: item._id ? 'PUT' : 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    });\n    this.props.history.push('/customers');\n  }\n\n  render() {\n    const {\n      item\n    } = this.state;\n    const title = /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, item.id ? 'Edit promotion' : 'Add promotion');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(AppNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, title, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, Object.keys(item).map(function (value) {\n      if (value != 'id') {\n        /*#__PURE__*/\n        React.createElement(FormGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          for: value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }\n        }, value), /*#__PURE__*/React.createElement(Input, {\n          type: \"text\",\n          name: value,\n          id: value,\n          value: item[value] || '',\n          onChange: this.handleChange,\n          autoComplete: value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }\n        }));\n      }\n    }))));\n  }\n\n}\n\nexport default withRouter(CustomerEdit);","map":{"version":3,"sources":["C:/Users/User/Desktop/moon active/Reactjs-Nodejs-MongoDB-CRUD-Example copy/src/PromotionEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","AppNavbar","CustomerEdit","constructor","props","emptyPromotion","state","item","emptyCustomer","handleChange","bind","handleSubmit","componentDidMount","match","params","id","promotion","fetch","json","setState","customer","event","target","value","name","preventDefault","method","_id","headers","body","JSON","stringify","history","push","render","title","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\n\r\nclass CustomerEdit extends Component {\r\n\r\n//   emptyCustomer = {\r\n//     firstname: '',\r\n//     lastname: '',\r\n//     age: '',\r\n//     address: '',\r\n//     copyrigtby: ''\r\n//   };\r\nemptyPromotion=[];\r\n   \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: this.emptyCustomer\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n\r\n    // need to call get /api/promotion/:id and to put on state\r\n\r\n    if (this.props.match.params.id !== 'new') {\r\n      const promotion = await (await fetch(`/api/promotiion/${this.props.match.params.id}`)).json();\r\n      this.setState({item: customer});\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n    item[name] = value;\r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n\r\n\r\n    // need to call update /api/promotion\r\n\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    await fetch('/api/promotion', {\r\n      method: (item._id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push('/customers');\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit promotion' : 'Add promotion'}</h2>;\r\n\r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n         {Object.keys(item).map(function(value) {\r\n                if(value != 'id') {\r\n                  <FormGroup>\r\n                    <Label for={value}>{value}</Label>\r\n                    <Input type=\"text\" name={value} id={value} value={item[value] || ''}\r\n                          onChange={this.handleChange} autoComplete={value}/>\r\n                  </FormGroup>\r\n                }\r\n            })}\r\n          {/* <FormGroup>\r\n            <Label for=\"firstname\">Firstname</Label>\r\n            <Input type=\"text\" name=\"firstname\" id=\"firstname\" value={item.firstname || ''}\r\n                   onChange={this.handleChange} autoComplete=\"firstname\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"lastname\">Lastname</Label>\r\n            <Input type=\"text\" name=\"lastname\" id=\"lastname\" value={item.lastname || ''}\r\n                   onChange={this.handleChange} autoComplete=\"lastname\"/>\r\n          </FormGroup>          \r\n          <FormGroup>\r\n            <Label for=\"age\">Age</Label>\r\n            <Input type=\"text\" name=\"age\" id=\"age\" value={item.age || ''}\r\n                   onChange={this.handleChange} autoComplete=\"age\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"address\">Address</Label>\r\n            <Input type=\"text\" name=\"address\" id=\"address\" value={item.address || ''}\r\n                   onChange={this.handleChange} autoComplete=\"address\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to=\"/customers\">Cancel</Button>\r\n          </FormGroup> */}\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(CustomerEdit);"]},"metadata":{},"sourceType":"module"}